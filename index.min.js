let prect_counter=0,alive=!1,websocket=null;const proto_ver=2;let leaveMessage=!1;function getPrecticeDone(){return console.log(prect_counter),prect_counter%2==0?prect_counter/2:(prect_counter+1)/2}function getByteCount(e){var t,r=0,n=e.length;for(e=String(e||""),t=0;t<n;t++){var a=encodeURI(e[t]).split("%").length;r+=1==a?1:a-1}return r}function printError(e){printMessage("×",e,"重试","connect")}function printMessage(e,t,r=!1,n=""){$("#ctas-msg").text(e+" "+t+" 💀已做："+getPrecticeDone()+"题"),r&&$("#ctas-msg").append(`&nbsp;&nbsp;<a class="ctas-href-action" onclick="${n}()" href="javascript:;">${r}</a>`)}function runProgram(){alive&&(printMessage("√","已提交运行"),websocket.send(JSON.stringify({req:"runProgram",proto:proto_ver})))}function connect(){if(!alive){(websocket=new WebSocket("ws://[::1]:12345/")).onopen=function(e){alive=!0,sendQuestion()},websocket.onclose=function(e){if(alive=!1,!leaveMessage)switch(e.code){case 1006:printError("已断开");break;case 1e3:printError("已关闭");break;default:printError("未知错误")}},websocket.onmessage=function(e){handleMessage(e)},websocket.onerror=function(e){alive=!1,printError("无法连接到解析器")}}}function handleMessage(e){leaveMessage=!1;const t=JSON.parse(e.data);if(t.seq==getPrecticeDone())switch(t.req){case"question":switch(t.status){case 200:printMessage("√","已复制","运行","runProgram");break;case 500:printError("无法解析本题");break;default:printError("无效回应")}break;case"compile":switch(t.status){case 200:printMessage("√","正在运行","重新运行","runProgram");break;case 500:printMessage("×","编译时出现错误","重新运行","runProgram");break;case 503:printMessage("×","平台不受支持");break;default:printError("无效回应")}break;case"error":leaveMessage=!0,printError(t.reason)}}function sendQuestion(){const e=$("#ProgramContent").html();alive?0!=e.length&&(printMessage("","正在载入..."),websocket.send(JSON.stringify({req:"question",length:getByteCount(e),content:e,seq:getPrecticeDone(),proto:proto_ver}))):printError("未连接")}connect(),$("#ProgramContent").bind("DOMSubtreeModified",function(){prect_counter++,sendQuestion()}),$("#divProgram").append('<div id="ctas-inject"><p id="ctas-msg">🚴‍Loading</p></div>'),document.getElementById("ProgramContent").designMode="on",document.getElementById("ProgramContent").contentEditable="true",$(".page").append('<style>.glLineNumber {    user-select: none !important;} .ctas-href-action {    color: rgba(233, 39, 100, 1.000) !important;}.ctas-href-action:hover {    opacity: .7 !important;}#ctas-inject {     background: rgba(0,0,0,.04);    border-radius: 20px;} #ctas-msg {    padding: 1vmin 2vmin;}td:last-child:after {     content: "© Dalvik Shen 2018 | CTAS-Debugger v1.2.41";    opacity: .3;font-size: .8em;}</style>');var el=document.body,listOfEvents=[],attributes=[].slice.call(el.attributes);for(i=0;i<attributes.length;i++){var att=attributes[i].name;if(0===att.indexOf("on")){var eventHandlers={};eventHandlers.attribute=attributes[i].name,eventHandlers.value=attributes[i].value,listOfEvents.push(eventHandlers),el.attributes.removeNamedItem(att)}}